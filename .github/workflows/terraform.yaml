# name: 'Terraform'

# on:
#   push:
#     branches:
#       - "main"

# jobs:
#   terraform:
#     name: 'Terraform'
#     env:
#         #AWS Secrets
#         AWS_ACCESS_KEY_ID: ${{secrets.AWS_DEVOPS_ACCESS_KEY_ID}}
#         AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_DEVOPS_SECRET_ACCESS_KEY_ID}}

#     runs-on: ubuntu-latest
    

#     steps:
#       # Checkout the repository to the GitHub Actions runner
#       - name: Checkout
#         uses: actions/checkout@v4

#       # Initialize a new or existing Terraform working directory
#       - name: Terraform Init
#         # uses: hashicorp/terraform-github-actions@master
#         uses: hashicorp/terraform-github-actions@v2
#         with:
#           tf_actions_version: "5.46.0"
#           tf_actions_subcommand: 'init'
#           tf_actions_working_dir: '.'
#           tf_actions_comment: true

#       # Generates an execution plan for Terraform
#       - name: Terraform Plan
#         # uses: hashicorp/terraform-github-actions@master
#         uses: hashicorp/terraform-github-actions

#         with:
#           tf_actions_version: "5.46.0"
#           tf_actions_subcommand: 'plan'
#           tf_actions_working_dir: '.'
#           tf_actions_comment: true

#       # Apply the Terraform configuration
#       - name: Terraform Apply
#         # uses: hashicorp/terraform-github-actions@master
#         uses: hashicorp/terraform-github-actions
#         with:
#           tf_actions_version: "5.46.0"
#           tf_actions_subcommand: 'apply'
#           tf_actions_working_dir: '.'
#           tf_actions_comment: true

      
name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: "Select Terraform Action"
        options:
          - apply
          - destroy
        required: true

  push:
    branches:
      - "main"

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      # AWS Secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEVOPS_SECRET_ACCESS_KEY_ID }}

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      # Initialize a new or existing Terraform working directory
      - name: Terraform Init
        run: terraform init

      # Generate an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan

      # Apply the Terraform configuration
      - name: Terraform Apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
         tf_actions_subcommand:${{ github.event.inputs.terraform_action }}
        run: ${{ github.event.inputs.terraform_action }}

      # Destroy the Terraform configuration
      - name: Terraform Destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
         tf_actions_subcommand:${{ github.event.inputs.terraform_action }} 

        run: ${{ github.event.inputs.terraform_action }}



      